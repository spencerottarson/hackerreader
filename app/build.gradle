apply plugin: 'com.android.application'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.ottarson.hackerreader"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.ottarson.hackerreader.MockTestRunner"
        buildConfigField("String", "API_URL", "\"https://hacker-news.firebaseio.com/v0/\"")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

configurations {
    ktlint
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.browser:browser:1.2.0'
    implementation 'com.google.android.material:material:1.1.0'

    def appCompatVersion = "1.1.0"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"

    def legacySupportVersion = "1.0.0"
    implementation "androidx.legacy:legacy-support-v4:$legacySupportVersion"

    // Card view
    def cardViewVersion = "1.0.0"
    implementation "androidx.cardview:cardview:$cardViewVersion"

    // Constraint Layout
    def constraintLayoutVersion = "1.1.3"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    // Dagger
    def daggerVersion = "2.25.2"
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"

    // Lifecycle Components
    def lifecycleVersion = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"

    // Navigation Components
    def navigationVersion = "2.2.1"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    // RxJava
    def rxJavaVersion = "2.1.1"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxJavaVersion"

    // Retrofit
    def retrofitVersion = "2.6.2"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.2'

    // Ktlint
    def ktlintVersion = "0.35.0"
    ktlint "com.pinterest:ktlint:$ktlintVersion"

    // Gson parsing
    def gsonVersion = "2.8.6"
    implementation "com.google.code.gson:gson:$gsonVersion"

    // Testing
    testImplementation 'junit:junit:4.12'
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "io.mockk:mockk:1.9.3"
    //noinspection GradleDependency
    testImplementation "org.robolectric:robolectric:4.3"

    implementation "androidx.fragment:fragment:1.2.1"
    debugImplementation('androidx.fragment:fragment-testing:1.1.0') {
        // exclude androidx.test:core while fragment_testing depends on 1.1.0
        exclude group: 'androidx.test', module: 'core'
    }
    debugImplementation 'androidx.test:core-ktx:1.2.0'
    androidTestImplementation "io.mockk:mockk-android:1.9.3"
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "--android", "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "--android", "-F", "src/**/*.kt"
}
